---
title: 'Feedback Control Systems'
date: ''
format: 
  baylor_theme-revealjs:
    author: 'Nathen Byford'
    footer: 'Nathen Byford M.S.'
    toc: true
    toc-depth: 1
    mermaid:
      theme: forest
---

# Introduction

## What are Control Systems

::: {.columns}
::: {.column}
Control system components

1. Sensors,
2. Monitors, and
3. Actuators

Control systems monitor large systems that cannot be monitored individualy.

:::

::: {.column}
```{mermaid}
graph TD
    A[Sensors] -->|Measured values| B[Monitor]
    B -->|Request| C[Actuators]
    C -->|Monitoring| A

```

:::
:::


:::{.notes}
The sensors measure the parameter (or parameters) of interest before transmitting the measured values to the monitor. THe monitor will then decide if it is neccessary for the system behaviors to change. If the behaviors do need to change then the request is given to the actuators to carry out on the system.

For example: a parameter used for admin. control policy is the current system load, once some threshold is met, the cloud stops accepting additional load.
:::

## Control Systems in the Cloud

- Since the early days of the cloud computing the CSP have provided coarse-grain control over the VMs to customers.
    - Limited to adding another VM or removing VM with prespecified sizes.
- Meanwhile the CSP is able to control load on their servers with full access to CPU, memory, disk usage, and etc.

![](vertical-scaling.png){fig-align="center"}

## Challenges

- Implementation of sutch poliies can be challenging,
- System load is changing rapidly, and
- SLA requirements need to be considered.

For customers who would like to run their own control monitors on their VMs there is a different set of challenges.

- What information about the system is shared with the customer, 
- APIs may only provide coarse granularity of control over system, and
- Coarse granularity can lead to oscillation around a target parameter.

## Main Problem

- In cloud computing settings the cloud provider like to control workloads and keep system usage high.
- In some cases the cloud customer would also like to keep track of their cloud usage and be able to optimize to keep costs down.
- Is it possible to have both?

# Proportional Thresholding

## Proportional Thresholding Goals

The paper seeks to answer the following questions

- With the constriaints places on the user cloud utility service API, can an external controller function effectively?
- How can controll policies be designed or adapted to handle the coarse-grained actuators typical of current cloud platforms?

## Proportional Thresholding Overview

- Proportional thresholding is an advanced feedback control policy used in cloud computing. Introdced in the textbook.
- Designed to manage resources in environments with coarse-grained control mechanisms (e.g., scaling virtual machines).
- Dynamically adjusts a target utilization range rather than maintaining a fixed target value.

## How It Works

- Uses integral control modified by dynamically adjusting a target range (high and low thresholds).
- Thresholds narrow dynamically as the system scales, ensuring precise control at larger scales.
- Particularly effective in environments with coarse-grained actuators, such as adding or removing virtual machines.

## Integral Control

An integral control is as follows,
$$
  u_{t + 1} = u_t + K_i \times (y_{ref} - y_t)
$$
where:

- $u_{t+1}$ is the new actuator value,
- $u_t$ is the current actuator value,
- $K_i$ is a tuning parameter, $y_{ref}$ is the target sensor measure, and
- $y_k$ is the current sensor measure.


## Benefits of Proportional Thresholding

- Reduces oscillations compared to traditional integral control or static thresholding.
- Provides stability at smaller cluster sizes and maintains precision control at larger cluster sizes.
- Effectively handles variable workload scenarios, improving resource efficiency and reducing operational costs.

## Potential Shortcomings

1. Adaptability to workload changes:
    - Might have trouble adapting to dynamic workloads where the rate of change in demend exceeds the adjustment capability

# Azure Monitor Autoscale

## Azure Autoscale Overview

- Statistical technique used to estimate trends and patterns to minimize false alarms.
- This techique used in anomaly detection can be used to get more accurate estimates of "normal behavior" over time incorperating long term trends and cyclical patterns.
- Unlike integral control, the data is assigned a distribution and the distribution of the data at the time point is updated with the new data.

## How Adaptive Thresholds Work

- Let $y_t$ be the observed 

# Autonomic Computing

## What is Autonomic Computing

Principles of self-managing infrastructure:

1. Self-configuration
2. Self-optimization
3. 